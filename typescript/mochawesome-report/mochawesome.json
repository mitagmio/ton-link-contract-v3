{
  "stats": {
    "suites": 8,
    "tests": 64,
    "passes": 64,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-23T13:25:59.178Z",
    "end": "2023-02-23T13:26:03.255Z",
    "duration": 4077,
    "testsRegistered": 64,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dbb09f4f-9ec8-4740-89be-70fcaf967830",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cbd49cbf-0c0e-46f3-befe-41d3bff684aa",
          "title": "ton-link-v3 init tests",
          "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
          "file": "/tests/transaction.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"ton-link-v3 init tests\"",
              "fullTitle": "ton-link-v3 init tests \"before each\" hook in \"ton-link-v3 init tests\"",
              "timedOut": false,
              "duration": 30,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const tonlinkCode = ton_core_1.Cell.fromBoc(fs.readFileSync(\"./output/ton-link.cell\"))[0];\nconst tonlink = contract_1.default.createForDeploy(tonlinkCode, wallet.address, minter.address, my.address);\ntonlinkContract = blockchain.openContract(tonlink);\nawait tonlinkContract.sendDeploy(deployer.getSender());",
              "err": {},
              "uuid": "b94f6654-0cd8-4520-9f93-e352a4a3b40b",
              "parentUUID": "cbd49cbf-0c0e-46f3-befe-41d3bff684aa",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "get_last_job - for example",
              "fullTitle": "ton-link-v3 init tests get_last_job - for example",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const value = await tonlinkContract.get_last_job();\n(0, chai_1.expect)(value).to.equal(0n);",
              "err": {},
              "uuid": "f827386d-bd74-4ed2-9f33-42fb1c99d4fc",
              "parentUUID": "cbd49cbf-0c0e-46f3-befe-41d3bff684aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get_max_provider - for example",
              "fullTitle": "ton-link-v3 init tests get_max_provider - for example",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const value = await tonlinkContract.get_max_provider();\n(0, chai_1.expect)(value).to.equal(0n);",
              "err": {},
              "uuid": "55a245d5-c61b-4ff2-9901-c3e178927ceb",
              "parentUUID": "cbd49cbf-0c0e-46f3-befe-41d3bff684aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f827386d-bd74-4ed2-9f33-42fb1c99d4fc",
            "55a245d5-c61b-4ff2-9901-c3e178927ceb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 69,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d0e839b9-bf26-4820-9477-f0595d095fb0",
          "title": "ton-link-v3 error module",
          "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
          "file": "/tests/transaction.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"ton-link-v3 error module\"",
              "fullTitle": "ton-link-v3 error module \"before each\" hook in \"ton-link-v3 error module\"",
              "timedOut": false,
              "duration": 38,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const tonlinkCode = ton_core_1.Cell.fromBoc(fs.readFileSync(\"./output/ton-link.cell\"))[0];\nconst tonlink = contract_1.default.createForDeploy(tonlinkCode, wallet.address, minter.address, my.address);\ntonlinkContractForError = blockchainForErr.openContract(tonlink);\nawait tonlinkContractForError.sendDeploy(deployerForErr.getSender());",
              "err": {},
              "uuid": "80d5e7c6-bdce-429a-ad82-03d9c5bb4e0c",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "[ERROR - 99 exitcode] registration",
              "fullTitle": "ton-link-v3 error module [ERROR - 99 exitcode] registration",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(25000000000000)\n    .storeAddress(myForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(99);\n(0, chai_1.expect)(res.aborted).to.equal(true);",
              "err": {},
              "uuid": "4dcf690c-93b4-416c-9ad5-6b54b06ed3a9",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 100 exitcode] registration",
              "fullTitle": "ton-link-v3 error module [ERROR - 100 exitcode] registration",
              "timedOut": false,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(myForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(myForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(100);\n(0, chai_1.expect)(res.aborted).to.equal(true);",
              "err": {},
              "uuid": "0c20165d-4912-4526-994b-07c98c9d1a7d",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 101 exitcode] registration",
              "fullTitle": "ton-link-v3 error module [ERROR - 101 exitcode] registration",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(140, 32)\n    .storeUint(0, 64)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(val2ForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(101);",
              "err": {},
              "uuid": "a78b49cc-88b8-4e05-985d-a1f27a9ea524",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 102 exitcode] registration",
              "fullTitle": "ton-link-v3 error module [ERROR - 102 exitcode] registration",
              "timedOut": false,
              "duration": 57,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(140, 32)\n    .storeUint(0, 64)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(myForErr.getSender(), body);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(140, 32)\n    .storeUint(0, 64)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(myForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(102);",
              "err": {},
              "uuid": "428363c1-f559-49d2-9a23-8b04967a32b3",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 103 exitcode] registration",
              "fullTitle": "ton-link-v3 error module [ERROR - 103 exitcode] registration",
              "timedOut": false,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val2ForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(140, 32)\n    .storeUint(0, 64)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(val2ForErr.getSender(), body);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(150, 32)\n    .storeUint(0, 64)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(myForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(103);",
              "err": {},
              "uuid": "7f5a9c4e-cca5-4e49-b80a-678d5208ed81",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration all validators",
              "fullTitle": "ton-link-v3 error module Registration all validators",
              "timedOut": false,
              "duration": 237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val2ForErr.address)\n    .endCell();\nvar res = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val3ForErr.address)\n    .endCell();\nvar res = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val4ForErr.address)\n    .endCell();\nvar res = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val5ForErr.address)\n    .endCell();\nvar res = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val6ForErr.address)\n    .endCell();\nvar res = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val7ForErr.address)\n    .endCell();\nvar res = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val8ForErr.address)\n    .endCell();\nvar res = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nconst value = await tonlinkContractForError.get_max_provider();\n(0, chai_1.expect)(value).to.equal(8n);",
              "err": {},
              "uuid": "c7f6fbe9-7df8-48be-9c34-927539c096e4",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 300 exitcode] job",
              "fullTitle": "ton-link-v3 error module [ERROR - 300 exitcode] job",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var link = (0, ton_core_1.beginCell)()\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(myForErr.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(50, 64)\n    .storeCoins(55000000000)\n    .storeAddress(myForErr.address)\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(myForErr.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nconst result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(300);\n(0, chai_1.expect)(res.aborted).to.equal(true);",
              "err": {},
              "uuid": "a948c62b-8566-4b20-8b46-c5250d5fe151",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create 1 job",
              "fullTitle": "ton-link-v3 error module Create 1 job",
              "timedOut": false,
              "duration": 43,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var link = (0, ton_core_1.beginCell)()\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(myForErr.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(50, 64)\n    .storeCoins(60000000000)\n    .storeAddress(myForErr.address)\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(myForErr.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nconst result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(0);\n(0, chai_1.expect)(res.aborted).to.equal(false);",
              "err": {},
              "uuid": "825cfbe1-e58d-4854-b2d4-dccebbdf2e90",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get validator array from first job",
              "fullTitle": "ton-link-v3 error module Get validator array from first job",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await tonlinkContractForError.get_job_by_jobid(1);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef();\nvar address_slice = (slice.loadRef()).beginParse();\nvar first_address_slice = (address_slice.loadRef()).beginParse();\nvar second_address_slice = (address_slice.loadRef()).beginParse();\nvar key = 0;\nvar count = 0;\nfor (let index = 0; index < 3; index++) {\n    var temp_address = first_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\nfor (let index = 0; index < 2; index++) {\n    var temp_address = second_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\n(0, chai_1.expect)(validatorArray.length).to.equal(5);",
              "err": {},
              "uuid": "3836dd0c-06f5-46c6-9b19-9bc6a70de1e5",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 203 exitcode] job",
              "fullTitle": "ton-link-v3 error module [ERROR - 203 exitcode] job",
              "timedOut": false,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var address = validatorArray[0];\nfor (let index = 0; index < validatorArrayOrigForErr.length; index++) {\n    const validator = validatorArrayOrigForErr[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var result = await tonlinkContractForError.sendAction(validator.getSender(), body);\n        var res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n        (0, chai_1.expect)(res.exitCode).to.equal(203);\n        (0, chai_1.expect)(res.aborted).to.equal(true);\n    }\n}",
              "err": {},
              "uuid": "7b5ba324-8ff2-4e62-ac3d-56e4b6730196",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 205 exitcode] job",
              "fullTitle": "ton-link-v3 error module [ERROR - 205 exitcode] job",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var address = validatorArray[0];\nfor (let index = 0; index < validatorArrayOrigForErr.length; index++) {\n    var num = 0;\n    const validator = validatorArrayOrigForErr[index];\n    if (validator.address.toString() != address) {\n        num++;\n    }\n    if (num == 5) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(1, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var result = await tonlinkContractForError.sendAction(validator.getSender(), body);\n        var res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n        (0, chai_1.expect)(res.exitCode).to.equal(205);\n        (0, chai_1.expect)(res.aborted).to.equal(true);\n    }\n}",
              "err": {},
              "uuid": "def93d99-c6a9-4ef7-a08a-d4222e7c4844",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sending a response from all val",
              "fullTitle": "ton-link-v3 error module Sending a response from all val",
              "timedOut": false,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for (let i = 0; i < validatorArray.length; i++) {\n    var address = validatorArray[i];\n    for (let index = 0; index < validatorArrayOrigForErr.length; index++) {\n        const validator = validatorArrayOrigForErr[index];\n        if (validator.address.toString() == address) {\n            var body = (0, ton_core_1.beginCell)()\n                .storeUint(160, 32)\n                .storeUint(0, 64)\n                .storeUint(1, 64)\n                .storeUint(5, 64)\n                .endCell();\n            var result = await tonlinkContractForError.sendAction(validator.getSender(), body);\n            var res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n            (0, chai_1.expect)(res.exitCode).to.equal(0);\n            (0, chai_1.expect)(res.aborted).to.equal(false);\n        }\n    }\n}",
              "err": {},
              "uuid": "46086c81-b77b-4d83-a3a3-923e288a7753",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check status job",
              "fullTitle": "ton-link-v3 error module Check status job",
              "timedOut": false,
              "duration": 63,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await tonlinkContractForError.get_job_by_jobid(1);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\n(0, chai_1.expect)(status).to.equal(1);",
              "err": {},
              "uuid": "e850281d-4ee9-4cc3-a7a4-33613bda3aa2",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check result job",
              "fullTitle": "ton-link-v3 error module Check result job",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await tonlinkContractForError.get_job_by_jobid(1);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef().beginParse();\ncontent.loadRef();\n(0, chai_1.expect)(content.loadUint(64)).to.equal(5);",
              "err": {},
              "uuid": "de0923b6-e10c-42ab-92c1-b4f4b7bb1a66",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 204 exitcode] job",
              "fullTitle": "ton-link-v3 error module [ERROR - 204 exitcode] job",
              "timedOut": false,
              "duration": 46,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var address = validatorArray[0];\nfor (let index = 0; index < validatorArrayOrigForErr.length; index++) {\n    const validator = validatorArrayOrigForErr[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(1, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var result = await tonlinkContractForError.sendAction(validator.getSender(), body);\n        var res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n        (0, chai_1.expect)(res.exitCode).to.equal(204);\n        (0, chai_1.expect)(res.aborted).to.equal(true);\n    }\n}",
              "err": {},
              "uuid": "fd93e70c-2daf-4902-bd33-7d894bdcb036",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create 2 job",
              "fullTitle": "ton-link-v3 error module Create 2 job",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(50, 64)\n    .storeCoins(60000000000)\n    .storeAddress(myForErr.address)\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(myForErr.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nconst result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(0);\n(0, chai_1.expect)(res.aborted).to.equal(false);",
              "err": {},
              "uuid": "729d8773-dc0e-4c70-a7e2-9219ba3ba9e4",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get validator array from second job",
              "fullTitle": "ton-link-v3 error module Get validator array from second job",
              "timedOut": false,
              "duration": 69,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const value = await tonlinkContractForError.get_last_job();\n(0, chai_1.expect)(value).to.equal(2n);\nconst res = await tonlinkContractForError.get_job_by_jobid(2);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef();\nvar address_slice = (slice.loadRef()).beginParse();\nvar first_address_slice = (address_slice.loadRef()).beginParse();\nvar second_address_slice = (address_slice.loadRef()).beginParse();\nvar key = 0;\nvar count = 0;\nfor (let index = 0; index < 3; index++) {\n    var temp_address = first_address_slice.loadAddress();\n    validatorArraySecond.push(temp_address.toString());\n}\nfor (let index = 0; index < 2; index++) {\n    var temp_address = second_address_slice.loadAddress();\n    validatorArraySecond.push(temp_address.toString());\n}\n(0, chai_1.expect)(validatorArraySecond.length).to.equal(5);",
              "err": {},
              "uuid": "2111ad03-28a0-4862-b931-5b9b65a7f556",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 207 exitcode] job",
              "fullTitle": "ton-link-v3 error module [ERROR - 207 exitcode] job",
              "timedOut": false,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var address = validatorArraySecond[0];\nfor (let index = 0; index < validatorArrayOrigForErr.length; index++) {\n    const validator = validatorArrayOrigForErr[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var result = await tonlinkContractForError.sendAction(validator.getSender(), body);\n        var res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n        (0, chai_1.expect)(res.exitCode).to.equal(0);\n        (0, chai_1.expect)(res.aborted).to.equal(false);\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var result = await tonlinkContractForError.sendAction(validator.getSender(), body);\n        var res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n        (0, chai_1.expect)(res.exitCode).to.equal(207);\n        (0, chai_1.expect)(res.aborted).to.equal(true);\n    }\n}",
              "err": {},
              "uuid": "7129b31d-bebc-4eeb-bf3b-0eeea69c7c15",
              "parentUUID": "d0e839b9-bf26-4820-9477-f0595d095fb0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4dcf690c-93b4-416c-9ad5-6b54b06ed3a9",
            "0c20165d-4912-4526-994b-07c98c9d1a7d",
            "a78b49cc-88b8-4e05-985d-a1f27a9ea524",
            "428363c1-f559-49d2-9a23-8b04967a32b3",
            "7f5a9c4e-cca5-4e49-b80a-678d5208ed81",
            "c7f6fbe9-7df8-48be-9c34-927539c096e4",
            "a948c62b-8566-4b20-8b46-c5250d5fe151",
            "825cfbe1-e58d-4854-b2d4-dccebbdf2e90",
            "3836dd0c-06f5-46c6-9b19-9bc6a70de1e5",
            "7b5ba324-8ff2-4e62-ac3d-56e4b6730196",
            "def93d99-c6a9-4ef7-a08a-d4222e7c4844",
            "46086c81-b77b-4d83-a3a3-923e288a7753",
            "e850281d-4ee9-4cc3-a7a4-33613bda3aa2",
            "de0923b6-e10c-42ab-92c1-b4f4b7bb1a66",
            "fd93e70c-2daf-4902-bd33-7d894bdcb036",
            "729d8773-dc0e-4c70-a7e2-9219ba3ba9e4",
            "2111ad03-28a0-4862-b931-5b9b65a7f556",
            "7129b31d-bebc-4eeb-bf3b-0eeea69c7c15"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1219,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "39cee359-d5d9-475d-8807-4bad4400fe7e",
          "title": "ton-link-v3 registration tests",
          "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
          "file": "/tests/transaction.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Registration of 1 validator",
              "fullTitle": "ton-link-v3 registration tests Registration of 1 validator",
              "timedOut": false,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(my.address)\n    .endCell();\nawait tonlinkContract.sendAction(wallet.getSender(), body);\nconst value = await tonlinkContract.get_max_provider();\n(0, chai_1.expect)(value).to.equal(1n);\nvar res = await tonlinkContract.get_info_about_provider(my.address);\nvar resSlice = res.beginParse();\n(0, chai_1.expect)(resSlice.loadAddress().toString()).to.equal(my.address.toString());\n(0, chai_1.expect)(resSlice.loadUint(2)).to.equal(0);",
              "err": {},
              "uuid": "6b12afa6-f060-46cc-83f5-787b4ea1ff0c",
              "parentUUID": "39cee359-d5d9-475d-8807-4bad4400fe7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pause + Unpause 1 validator",
              "fullTitle": "ton-link-v3 registration tests Pause + Unpause 1 validator",
              "timedOut": false,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(140, 32)\n    .storeUint(0, 64)\n    .endCell();\nawait tonlinkContract.sendAction(my.getSender(), body);\nvar res = await tonlinkContract.get_info_about_provider(my.address);\nvar resSlice = res.beginParse();\n(0, chai_1.expect)(resSlice.loadAddress().toString()).to.equal(my.address.toString());\n(0, chai_1.expect)(resSlice.loadUint(2)).to.equal(1);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(130, 32)\n    .storeUint(0, 64)\n    .endCell();\nawait tonlinkContract.sendAction(my.getSender(), body);\nres = await tonlinkContract.get_info_about_provider(my.address);\nresSlice = res.beginParse();\n(0, chai_1.expect)(resSlice.loadAddress().toString()).to.equal(my.address.toString());\n(0, chai_1.expect)(resSlice.loadUint(2)).to.equal(0);",
              "err": {},
              "uuid": "43b4cb68-c2f0-4a4f-9ad4-226ca31ac99c",
              "parentUUID": "39cee359-d5d9-475d-8807-4bad4400fe7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete 1 validator",
              "fullTitle": "ton-link-v3 registration tests Delete 1 validator",
              "timedOut": false,
              "duration": 51,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(150, 32)\n    .storeUint(0, 64)\n    .endCell();\nawait tonlinkContract.sendAction(my.getSender(), body);\nconst res = await tonlinkContract.get_info_about_provider(my.address);\nvar resSlice = res.beginParse();\n(0, chai_1.expect)(resSlice.loadAddress().toString()).to.equal(my.address.toString());\n(0, chai_1.expect)(resSlice.loadUint(2)).to.equal(2);\nresSlice.loadUint(64);\n(0, chai_1.expect)(resSlice.loadCoins()).to.equal(0n);",
              "err": {},
              "uuid": "b36ecadd-8b26-4f4b-ba34-895ca2e9d7ef",
              "parentUUID": "39cee359-d5d9-475d-8807-4bad4400fe7e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b12afa6-f060-46cc-83f5-787b4ea1ff0c",
            "43b4cb68-c2f0-4a4f-9ad4-226ca31ac99c",
            "b36ecadd-8b26-4f4b-ba34-895ca2e9d7ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 251,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
          "title": "ton-link-v3 registration of all val",
          "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
          "file": "/tests/transaction.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Registration of 1 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 1 validator",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val2.address)\n    .endCell();\nawait tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "cf9ce5ff-88b4-4d2e-9152-ef4ee6469c82",
              "parentUUID": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 2 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 2 validator",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val3.address)\n    .endCell();\nawait tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "516b5a2a-07c2-4b93-bc9b-4fbd03ba7679",
              "parentUUID": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 3 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 3 validator",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val4.address)\n    .endCell();\nawait tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "a7e69c10-ab7a-4b18-bf37-b87b89f0cb4e",
              "parentUUID": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 4 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 4 validator",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val5.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "bd0af0d6-90da-40ae-859f-578716041238",
              "parentUUID": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 5 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 5 validator",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val6.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "37e87015-061e-452c-b993-4eb366d07947",
              "parentUUID": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 6 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 6 validator",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val7.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "09f9d1de-2367-41d3-a868-28658081f905",
              "parentUUID": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 7 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 7 validator",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val8.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "3eef19c7-44bf-4bf4-b397-41c8f6411c30",
              "parentUUID": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 8 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 8 validator",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val9.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "c58c926e-c322-490e-ab92-a9ecf2a78ed8",
              "parentUUID": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 9 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 9 validator",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val10.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "2c6f3fe3-ef89-49eb-9ac8-eaa86c4ae6fa",
              "parentUUID": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 10 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 10 validator",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val11.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "ce5e2343-d35d-405b-8da0-a9ed436dea0e",
              "parentUUID": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 11 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 11 validator",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val12.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "c2b7fd0c-cc50-4628-8125-607bd710c4d9",
              "parentUUID": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 12 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 12 validator",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val13.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "e9118062-de43-46e7-9c47-cc400e119b72",
              "parentUUID": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 13 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 13 validator",
              "timedOut": false,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val14.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "a6df9fd8-de64-4285-9254-a2ffab8b8c18",
              "parentUUID": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check all registration",
              "fullTitle": "ton-link-v3 registration of all val Check all registration",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const value = await tonlinkContract.get_max_provider();\n(0, chai_1.expect)(value).to.equal(14n);",
              "err": {},
              "uuid": "043d89ae-874c-4b2b-b70d-b1b2905fd8b0",
              "parentUUID": "0f06cfb3-0c8f-4062-ae46-2897c7079a32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf9ce5ff-88b4-4d2e-9152-ef4ee6469c82",
            "516b5a2a-07c2-4b93-bc9b-4fbd03ba7679",
            "a7e69c10-ab7a-4b18-bf37-b87b89f0cb4e",
            "bd0af0d6-90da-40ae-859f-578716041238",
            "37e87015-061e-452c-b993-4eb366d07947",
            "09f9d1de-2367-41d3-a868-28658081f905",
            "3eef19c7-44bf-4bf4-b397-41c8f6411c30",
            "c58c926e-c322-490e-ab92-a9ecf2a78ed8",
            "2c6f3fe3-ef89-49eb-9ac8-eaa86c4ae6fa",
            "ce5e2343-d35d-405b-8da0-a9ed436dea0e",
            "c2b7fd0c-cc50-4628-8125-607bd710c4d9",
            "e9118062-de43-46e7-9c47-cc400e119b72",
            "a6df9fd8-de64-4285-9254-a2ffab8b8c18",
            "043d89ae-874c-4b2b-b70d-b1b2905fd8b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 423,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9896afe5-1820-4fd2-adb0-0e9446dcc740",
          "title": "ton-link-v3 job tests",
          "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
          "file": "/tests/transaction.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "655fccea-15d5-4bf5-bbe9-28d63fbcaef5",
              "title": "ton-link-v3 100% consensus tests",
              "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
              "file": "/tests/transaction.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Create job",
                  "timedOut": false,
                  "duration": 94,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var link = (0, ton_core_1.beginCell)()\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(my.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(50, 64)\n    .storeCoins(60000000000)\n    .storeAddress(my.address)\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(my.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nconst createJobResult = await tonlinkContract.sendAction(wallet.getSender(), body);\nconst value = await tonlinkContract.get_last_job();\n(0, chai_1.expect)(value).to.equal(1n);",
                  "err": {},
                  "uuid": "93bedfe9-c855-4e70-8b49-141c7e021119",
                  "parentUUID": "655fccea-15d5-4bf5-bbe9-28d63fbcaef5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get validator array",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Get validator array",
                  "timedOut": false,
                  "duration": 46,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(1);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef();\nvar address_slice = (slice.loadRef()).beginParse();\nvar first_address_slice = (address_slice.loadRef()).beginParse();\nvar second_address_slice = (address_slice.loadRef()).beginParse();\nvar key = 0;\nvar count = 0;\nfor (let index = 0; index < 3; index++) {\n    var temp_address = first_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\nfor (let index = 0; index < 2; index++) {\n    var temp_address = second_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\n(0, chai_1.expect)(validatorArray.length).to.equal(5);",
                  "err": {},
                  "uuid": "ebfcc39f-30b8-44ba-9eb3-7b1a84c22277",
                  "parentUUID": "655fccea-15d5-4bf5-bbe9-28d63fbcaef5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 1 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Sending a response from the 1 val",
                  "timedOut": false,
                  "duration": 46,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[0];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(1, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "a689b56c-4e34-45af-a4aa-eca3fe1ab33d",
                  "parentUUID": "655fccea-15d5-4bf5-bbe9-28d63fbcaef5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 2 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Sending a response from the 2 val",
                  "timedOut": false,
                  "duration": 42,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[1];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(1, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "73beccc8-fd5c-4057-b5bd-95913924dc90",
                  "parentUUID": "655fccea-15d5-4bf5-bbe9-28d63fbcaef5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 3 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Sending a response from the 3 val",
                  "timedOut": false,
                  "duration": 43,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[2];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(1, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "ea256fb8-fc41-413b-9fb2-37975e8a6b4c",
                  "parentUUID": "655fccea-15d5-4bf5-bbe9-28d63fbcaef5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 4 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Sending a response from the 4 val",
                  "timedOut": false,
                  "duration": 39,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[3];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(1, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "f1fa62f8-1c4a-4f84-8267-bba154326fc3",
                  "parentUUID": "655fccea-15d5-4bf5-bbe9-28d63fbcaef5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 5 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Sending a response from the 5 val",
                  "timedOut": false,
                  "duration": 50,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[4];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(1, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "7f202165-a417-44eb-a2ba-054aca4e9612",
                  "parentUUID": "655fccea-15d5-4bf5-bbe9-28d63fbcaef5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check status job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Check status job",
                  "timedOut": false,
                  "duration": 31,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(1);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\n(0, chai_1.expect)(status).to.equal(1);",
                  "err": {},
                  "uuid": "775f5b54-5606-404a-b9b6-aef89a9a0a4b",
                  "parentUUID": "655fccea-15d5-4bf5-bbe9-28d63fbcaef5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check result job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Check result job",
                  "timedOut": false,
                  "duration": 31,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(1);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef().beginParse();\ncontent.loadRef();\n(0, chai_1.expect)(content.loadUint(64)).to.equal(5);",
                  "err": {},
                  "uuid": "9b8345ad-88c0-4699-8306-7f26e4ec59e0",
                  "parentUUID": "655fccea-15d5-4bf5-bbe9-28d63fbcaef5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "93bedfe9-c855-4e70-8b49-141c7e021119",
                "ebfcc39f-30b8-44ba-9eb3-7b1a84c22277",
                "a689b56c-4e34-45af-a4aa-eca3fe1ab33d",
                "73beccc8-fd5c-4057-b5bd-95913924dc90",
                "ea256fb8-fc41-413b-9fb2-37975e8a6b4c",
                "f1fa62f8-1c4a-4f84-8267-bba154326fc3",
                "7f202165-a417-44eb-a2ba-054aca4e9612",
                "775f5b54-5606-404a-b9b6-aef89a9a0a4b",
                "9b8345ad-88c0-4699-8306-7f26e4ec59e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 422,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e33fc351-95e2-4071-8e68-6b6880d35d06",
              "title": "ton-link-v3 80% consensus tests",
              "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
              "file": "/tests/transaction.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Create job",
                  "timedOut": false,
                  "duration": 97,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mp = await tonlinkContract.get_max_provider();\nvar link = (0, ton_core_1.beginCell)()\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(my.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(50, 64)\n    .storeCoins(60000000000)\n    .storeAddress(my.address)\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(my.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nconst createJobResult = await tonlinkContract.sendAction(wallet.getSender(), body);\nconst value = await tonlinkContract.get_last_job();\n(0, chai_1.expect)(value).to.equal(2n);",
                  "err": {},
                  "uuid": "919e6575-624a-4c80-9399-14b4bcc2cda3",
                  "parentUUID": "e33fc351-95e2-4071-8e68-6b6880d35d06",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get validator array",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Get validator array",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(2);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\n(0, chai_1.expect)(jobID).to.equal(2);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef();\nvar address_slice = (slice.loadRef()).beginParse();\nvar first_address_slice = (address_slice.loadRef()).beginParse();\nvar second_address_slice = (address_slice.loadRef()).beginParse();\nvar key = 0;\nvar count = 0;\nfor (let index = 0; index < 3; index++) {\n    var temp_address = first_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\nfor (let index = 0; index < 2; index++) {\n    var temp_address = second_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\n(0, chai_1.expect)(validatorArray.length).to.equal(5);",
                  "err": {},
                  "uuid": "423864ce-8b8a-4745-a7c3-248dbe4b4a0b",
                  "parentUUID": "e33fc351-95e2-4071-8e68-6b6880d35d06",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 1 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Sending a response from the 1 val",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[0];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(1, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "2097c106-386c-4cb7-9c28-6ab172a05e44",
                  "parentUUID": "e33fc351-95e2-4071-8e68-6b6880d35d06",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 2 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Sending a response from the 2 val",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[1];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(1, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "c583604a-6d41-489d-8ec0-5a91e06d7592",
                  "parentUUID": "e33fc351-95e2-4071-8e68-6b6880d35d06",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 3 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Sending a response from the 3 val",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[2];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(1, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "56a903c1-c14d-41d8-903d-638738575a69",
                  "parentUUID": "e33fc351-95e2-4071-8e68-6b6880d35d06",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 4 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Sending a response from the 4 val",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[3];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(1, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "6da3d606-96ea-4e1c-85a4-7f538ff541c1",
                  "parentUUID": "e33fc351-95e2-4071-8e68-6b6880d35d06",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 5 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Sending a response from the 5 val",
                  "timedOut": false,
                  "duration": 53,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[4];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(4, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "52d1908a-e2c4-4e03-855a-96f26fdc8274",
                  "parentUUID": "e33fc351-95e2-4071-8e68-6b6880d35d06",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check status job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Check status job",
                  "timedOut": false,
                  "duration": 34,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(2);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\n(0, chai_1.expect)(status).to.equal(1);",
                  "err": {},
                  "uuid": "b04dcce3-0d02-41b2-8131-f3b6a278088b",
                  "parentUUID": "e33fc351-95e2-4071-8e68-6b6880d35d06",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check result job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Check result job",
                  "timedOut": false,
                  "duration": 36,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(2);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef().beginParse();\ncontent.loadRef();\n(0, chai_1.expect)(content.loadUint(64)).to.equal(1);",
                  "err": {},
                  "uuid": "83b11e18-17c8-44ff-9a5c-5275efbe0396",
                  "parentUUID": "e33fc351-95e2-4071-8e68-6b6880d35d06",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "919e6575-624a-4c80-9399-14b4bcc2cda3",
                "423864ce-8b8a-4745-a7c3-248dbe4b4a0b",
                "2097c106-386c-4cb7-9c28-6ab172a05e44",
                "c583604a-6d41-489d-8ec0-5a91e06d7592",
                "56a903c1-c14d-41d8-903d-638738575a69",
                "6da3d606-96ea-4e1c-85a4-7f538ff541c1",
                "52d1908a-e2c4-4e03-855a-96f26fdc8274",
                "b04dcce3-0d02-41b2-8131-f3b6a278088b",
                "83b11e18-17c8-44ff-9a5c-5275efbe0396"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 385,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c25f1f4a-0117-4409-a340-7069dd96c34d",
              "title": "ton-link-v3 20% consensus tests",
              "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
              "file": "/tests/transaction.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Create job",
                  "timedOut": false,
                  "duration": 79,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var link = (0, ton_core_1.beginCell)()\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(my.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(50, 64)\n    .storeCoins(60000000000)\n    .storeAddress(my.address)\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(my.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nconst createJobResult = await tonlinkContract.sendAction(wallet.getSender(), body);\n//console.log(createJobResult.transactions[1].description)\nconst value = await tonlinkContract.get_last_job();\n(0, chai_1.expect)(value).to.equal(3n);",
                  "err": {},
                  "uuid": "f0c10e84-1c3c-498e-be69-b0748372d8b3",
                  "parentUUID": "c25f1f4a-0117-4409-a340-7069dd96c34d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get validator array",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Get validator array",
                  "timedOut": false,
                  "duration": 38,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(3);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\n(0, chai_1.expect)(jobID).to.equal(3);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef();\nvar address_slice = (slice.loadRef()).beginParse();\nvar first_address_slice = (address_slice.loadRef()).beginParse();\nvar second_address_slice = (address_slice.loadRef()).beginParse();\nvar key = 0;\nvar count = 0;\nfor (let index = 0; index < 3; index++) {\n    var temp_address = first_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\nfor (let index = 0; index < 2; index++) {\n    var temp_address = second_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\n(0, chai_1.expect)(validatorArray.length).to.equal(5);\n//console.log(validatorArray)",
                  "err": {},
                  "uuid": "3df07b17-42b4-4325-8a94-20a91b74dee5",
                  "parentUUID": "c25f1f4a-0117-4409-a340-7069dd96c34d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 1 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Sending a response from the 1 val",
                  "timedOut": false,
                  "duration": 38,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[0];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(3, 64)\n            .storeUint(1, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "51a1550c-9347-4d93-8794-8cf33921c5dd",
                  "parentUUID": "c25f1f4a-0117-4409-a340-7069dd96c34d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 2 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Sending a response from the 2 val",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[1];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(3, 64)\n            .storeUint(3, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "7b6b44c2-2a21-410e-b79a-f025073a8255",
                  "parentUUID": "c25f1f4a-0117-4409-a340-7069dd96c34d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 3 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Sending a response from the 3 val",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[2];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(3, 64)\n            .storeUint(3, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "ec9e6a07-b69c-4c5f-8d1c-10676744ed91",
                  "parentUUID": "c25f1f4a-0117-4409-a340-7069dd96c34d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 4 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Sending a response from the 4 val",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[3];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(3, 64)\n            .storeUint(3, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "e2cd9180-a640-4be1-ab44-e1ec9720d640",
                  "parentUUID": "c25f1f4a-0117-4409-a340-7069dd96c34d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 5 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Sending a response from the 5 val",
                  "timedOut": false,
                  "duration": 53,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[4];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(3, 64)\n            .storeUint(4, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "d556d787-4bde-4385-addc-67e636811856",
                  "parentUUID": "c25f1f4a-0117-4409-a340-7069dd96c34d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check status job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Check status job",
                  "timedOut": false,
                  "duration": 35,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(3);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\n(0, chai_1.expect)(status).to.equal(1);",
                  "err": {},
                  "uuid": "13e42a09-ef68-4065-a827-09ab29119ef6",
                  "parentUUID": "c25f1f4a-0117-4409-a340-7069dd96c34d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check result job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Check result job",
                  "timedOut": false,
                  "duration": 41,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(3);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef().beginParse();\ncontent.loadRef();\n(0, chai_1.expect)(content.loadUint(64)).to.equal(3);",
                  "err": {},
                  "uuid": "8ee206bf-6974-4bbc-8724-f69ae5fffd22",
                  "parentUUID": "c25f1f4a-0117-4409-a340-7069dd96c34d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0c10e84-1c3c-498e-be69-b0748372d8b3",
                "3df07b17-42b4-4325-8a94-20a91b74dee5",
                "51a1550c-9347-4d93-8794-8cf33921c5dd",
                "7b6b44c2-2a21-410e-b79a-f025073a8255",
                "ec9e6a07-b69c-4c5f-8d1c-10676744ed91",
                "e2cd9180-a640-4be1-ab44-e1ec9720d640",
                "d556d787-4bde-4385-addc-67e636811856",
                "13e42a09-ef68-4065-a827-09ab29119ef6",
                "8ee206bf-6974-4bbc-8724-f69ae5fffd22"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 395,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}