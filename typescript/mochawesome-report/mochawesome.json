{
  "stats": {
    "suites": 8,
    "tests": 65,
    "passes": 65,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-23T15:25:54.655Z",
    "end": "2023-02-23T15:25:58.011Z",
    "duration": 3356,
    "testsRegistered": 65,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "776ac29d-8c72-4e5e-871a-31789fd13f86",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c6293f7a-d396-4fca-81a2-51326f7af1d5",
          "title": "ton-link-v3 init tests",
          "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
          "file": "/tests/transaction.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"ton-link-v3 init tests\"",
              "fullTitle": "ton-link-v3 init tests \"before each\" hook in \"ton-link-v3 init tests\"",
              "timedOut": false,
              "duration": 29,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const tonlinkCode = ton_core_1.Cell.fromBoc(fs.readFileSync(\"./output/ton-link.cell\"))[0];\nconst tonlink = contract_1.default.createForDeploy(tonlinkCode, wallet.address, minter.address, my.address);\ntonlinkContract = blockchain.openContract(tonlink);\nawait tonlinkContract.sendDeploy(deployer.getSender());",
              "err": {},
              "uuid": "d6104f32-43c0-4aaf-9527-5dd071b3c6a2",
              "parentUUID": "c6293f7a-d396-4fca-81a2-51326f7af1d5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "get_last_job - for example",
              "fullTitle": "ton-link-v3 init tests get_last_job - for example",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const value = await tonlinkContract.get_last_job();\n(0, chai_1.expect)(value).to.equal(0n);",
              "err": {},
              "uuid": "8c49ba41-344d-4788-9f96-8987005e6c2a",
              "parentUUID": "c6293f7a-d396-4fca-81a2-51326f7af1d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get_max_provider - for example",
              "fullTitle": "ton-link-v3 init tests get_max_provider - for example",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const value = await tonlinkContract.get_max_provider();\n(0, chai_1.expect)(value).to.equal(0n);",
              "err": {},
              "uuid": "39f294b6-b99b-49f1-bb9f-235bd80a5e2e",
              "parentUUID": "c6293f7a-d396-4fca-81a2-51326f7af1d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c49ba41-344d-4788-9f96-8987005e6c2a",
            "39f294b6-b99b-49f1-bb9f-235bd80a5e2e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 58,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
          "title": "ton-link-v3 error module",
          "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
          "file": "/tests/transaction.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"ton-link-v3 error module\"",
              "fullTitle": "ton-link-v3 error module \"before each\" hook in \"ton-link-v3 error module\"",
              "timedOut": false,
              "duration": 27,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const tonlinkCode = ton_core_1.Cell.fromBoc(fs.readFileSync(\"./output/ton-link.cell\"))[0];\nconst tonlink = contract_1.default.createForDeploy(tonlinkCode, wallet.address, minter.address, my.address);\ntonlinkContractForError = blockchainForErr.openContract(tonlink);\nawait tonlinkContractForError.sendDeploy(deployerForErr.getSender());",
              "err": {},
              "uuid": "8f086345-56a0-4e5b-9911-22e76d4e43f3",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "[ERROR - 99 exitcode] registration",
              "fullTitle": "ton-link-v3 error module [ERROR - 99 exitcode] registration",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(25000000000000)\n    .storeAddress(myForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(99);\n(0, chai_1.expect)(res.aborted).to.equal(true);",
              "err": {},
              "uuid": "a04a885e-748a-4d91-8d0f-8f3b821362df",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 100 exitcode] registration",
              "fullTitle": "ton-link-v3 error module [ERROR - 100 exitcode] registration",
              "timedOut": false,
              "duration": 58,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(myForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(myForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(100);\n(0, chai_1.expect)(res.aborted).to.equal(true);",
              "err": {},
              "uuid": "197e7c49-c52e-4c0e-a7dc-2c71fcc332df",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 101 exitcode] registration",
              "fullTitle": "ton-link-v3 error module [ERROR - 101 exitcode] registration",
              "timedOut": false,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(140, 32)\n    .storeUint(0, 64)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(val2ForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(101);",
              "err": {},
              "uuid": "2a4b82e8-e549-47c8-b2fd-0d6cf8e788b2",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 102 exitcode] registration",
              "fullTitle": "ton-link-v3 error module [ERROR - 102 exitcode] registration",
              "timedOut": false,
              "duration": 54,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(140, 32)\n    .storeUint(0, 64)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(myForErr.getSender(), body);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(140, 32)\n    .storeUint(0, 64)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(myForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(102);",
              "err": {},
              "uuid": "9901a26e-0eac-4021-b273-e4e144fc2b84",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 103 exitcode] registration",
              "fullTitle": "ton-link-v3 error module [ERROR - 103 exitcode] registration",
              "timedOut": false,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val2ForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(140, 32)\n    .storeUint(0, 64)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(val2ForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(0);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(150, 32)\n    .storeUint(0, 64)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(myForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(103);",
              "err": {},
              "uuid": "e6299edc-cd6f-4536-87fd-5ab85f1869a5",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unpause + delete",
              "fullTitle": "ton-link-v3 error module Unpause + delete",
              "timedOut": false,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(130, 32)\n    .storeUint(0, 64)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(val2ForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(0);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(150, 32)\n    .storeUint(0, 64)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(val2ForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(0);\nvar validatorCell = await tonlinkContractForError.get_info_about_provider(val2ForErr.address);\nvar resSlice = validatorCell.beginParse();\nresSlice.loadAddress();\n(0, chai_1.expect)(resSlice.loadUint(2)).to.equal(2);",
              "err": {},
              "uuid": "b5b3902d-a465-4778-b6c9-6d5150bc2ce1",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration all validators",
              "fullTitle": "ton-link-v3 error module Registration all validators",
              "timedOut": false,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val2ForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(0);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val3ForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(0);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val4ForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(0);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val5ForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(0);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val6ForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(0);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val7ForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(0);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val8ForErr.address)\n    .endCell();\nvar result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(0);\nconst value = await tonlinkContractForError.get_max_provider();\n(0, chai_1.expect)(value).to.equal(8n);",
              "err": {},
              "uuid": "f37b323a-d8b9-4ad7-9fb2-95c1e0f038a2",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 300 exitcode] job",
              "fullTitle": "ton-link-v3 error module [ERROR - 300 exitcode] job",
              "timedOut": false,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var link = (0, ton_core_1.beginCell)()\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(myForErr.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(50, 64)\n    .storeCoins(55000000000)\n    .storeAddress(myForErr.address)\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(myForErr.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nconst result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(300);\n(0, chai_1.expect)(res.aborted).to.equal(true);",
              "err": {},
              "uuid": "3835ae0e-14dd-40df-9ae0-520e359d379d",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create 1 job",
              "fullTitle": "ton-link-v3 error module Create 1 job",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var link = (0, ton_core_1.beginCell)()\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(myForErr.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(50, 64)\n    .storeCoins(60000000000)\n    .storeAddress(myForErr.address)\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(myForErr.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nconst result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(0);\n(0, chai_1.expect)(res.aborted).to.equal(false);",
              "err": {},
              "uuid": "19df846d-97d5-4cfc-9f6a-f2f43a894aaa",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get validator array from first job",
              "fullTitle": "ton-link-v3 error module Get validator array from first job",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await tonlinkContractForError.get_job_by_jobid(1);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef();\nvar address_slice = (slice.loadRef()).beginParse();\nvar first_address_slice = (address_slice.loadRef()).beginParse();\nvar second_address_slice = (address_slice.loadRef()).beginParse();\nvar key = 0;\nvar count = 0;\nfor (let index = 0; index < 3; index++) {\n    var temp_address = first_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\nfor (let index = 0; index < 2; index++) {\n    var temp_address = second_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\n(0, chai_1.expect)(validatorArray.length).to.equal(5);",
              "err": {},
              "uuid": "33b83c6a-c6eb-4ff5-946f-cd2a14c8197b",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 203 exitcode] job",
              "fullTitle": "ton-link-v3 error module [ERROR - 203 exitcode] job",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var address = validatorArray[0];\nfor (let index = 0; index < validatorArrayOrigForErr.length; index++) {\n    const validator = validatorArrayOrigForErr[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var result = await tonlinkContractForError.sendAction(validator.getSender(), body);\n        var res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n        (0, chai_1.expect)(res.exitCode).to.equal(203);\n        (0, chai_1.expect)(res.aborted).to.equal(true);\n    }\n}",
              "err": {},
              "uuid": "27bf519d-01ea-4d03-9684-a5af914f9b7c",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 205 exitcode] job",
              "fullTitle": "ton-link-v3 error module [ERROR - 205 exitcode] job",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var address = validatorArray[0];\nfor (let index = 0; index < validatorArrayOrigForErr.length; index++) {\n    var num = 0;\n    const validator = validatorArrayOrigForErr[index];\n    if (validator.address.toString() != address) {\n        num++;\n    }\n    if (num == 5) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(1, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var result = await tonlinkContractForError.sendAction(validator.getSender(), body);\n        var res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n        (0, chai_1.expect)(res.exitCode).to.equal(205);\n        (0, chai_1.expect)(res.aborted).to.equal(true);\n    }\n}",
              "err": {},
              "uuid": "a1fa3874-8ba3-4eaa-b08e-3b839dcdb865",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sending a response from all val",
              "fullTitle": "ton-link-v3 error module Sending a response from all val",
              "timedOut": false,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "for (let i = 0; i < validatorArray.length; i++) {\n    var address = validatorArray[i];\n    for (let index = 0; index < validatorArrayOrigForErr.length; index++) {\n        const validator = validatorArrayOrigForErr[index];\n        if (validator.address.toString() == address) {\n            var body = (0, ton_core_1.beginCell)()\n                .storeUint(160, 32)\n                .storeUint(0, 64)\n                .storeUint(1, 64)\n                .storeUint(5, 64)\n                .endCell();\n            var result = await tonlinkContractForError.sendAction(validator.getSender(), body);\n            var res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n            (0, chai_1.expect)(res.exitCode).to.equal(0);\n            (0, chai_1.expect)(res.aborted).to.equal(false);\n        }\n    }\n}",
              "err": {},
              "uuid": "f043b191-b610-4af3-bcb7-af2882eedc04",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check status job",
              "fullTitle": "ton-link-v3 error module Check status job",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await tonlinkContractForError.get_job_by_jobid(1);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\n(0, chai_1.expect)(status).to.equal(1);",
              "err": {},
              "uuid": "cbf64d0c-eefa-47bf-a9f3-5efe64c2b54f",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check result job",
              "fullTitle": "ton-link-v3 error module Check result job",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await tonlinkContractForError.get_job_by_jobid(1);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef().beginParse();\ncontent.loadRef();\n(0, chai_1.expect)(content.loadUint(64)).to.equal(5);",
              "err": {},
              "uuid": "122a1b68-a896-4e21-acfc-3bab286fa217",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 204 exitcode] job",
              "fullTitle": "ton-link-v3 error module [ERROR - 204 exitcode] job",
              "timedOut": false,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var address = validatorArray[0];\nfor (let index = 0; index < validatorArrayOrigForErr.length; index++) {\n    const validator = validatorArrayOrigForErr[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(1, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var result = await tonlinkContractForError.sendAction(validator.getSender(), body);\n        var res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n        (0, chai_1.expect)(res.exitCode).to.equal(204);\n        (0, chai_1.expect)(res.aborted).to.equal(true);\n    }\n}",
              "err": {},
              "uuid": "445f52ae-95ac-41ef-a92c-319b33aed96e",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create 2 job",
              "fullTitle": "ton-link-v3 error module Create 2 job",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(50, 64)\n    .storeCoins(60000000000)\n    .storeAddress(myForErr.address)\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(myForErr.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nconst result = await tonlinkContractForError.sendAction(walletForErr.getSender(), body);\nvar res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n(0, chai_1.expect)(res.exitCode).to.equal(0);\n(0, chai_1.expect)(res.aborted).to.equal(false);",
              "err": {},
              "uuid": "4bb3b0b0-8844-482f-a76f-3808f1f9c33e",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get validator array from second job",
              "fullTitle": "ton-link-v3 error module Get validator array from second job",
              "timedOut": false,
              "duration": 54,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const value = await tonlinkContractForError.get_last_job();\n(0, chai_1.expect)(value).to.equal(2n);\nconst res = await tonlinkContractForError.get_job_by_jobid(2);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef();\nvar address_slice = (slice.loadRef()).beginParse();\nvar first_address_slice = (address_slice.loadRef()).beginParse();\nvar second_address_slice = (address_slice.loadRef()).beginParse();\nvar key = 0;\nvar count = 0;\nfor (let index = 0; index < 3; index++) {\n    var temp_address = first_address_slice.loadAddress();\n    validatorArraySecond.push(temp_address.toString());\n}\nfor (let index = 0; index < 2; index++) {\n    var temp_address = second_address_slice.loadAddress();\n    validatorArraySecond.push(temp_address.toString());\n}\n(0, chai_1.expect)(validatorArraySecond.length).to.equal(5);",
              "err": {},
              "uuid": "8cbcfee7-907b-469f-9f1c-80d94822f7ec",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[ERROR - 207 exitcode] job",
              "fullTitle": "ton-link-v3 error module [ERROR - 207 exitcode] job",
              "timedOut": false,
              "duration": 61,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var address = validatorArraySecond[0];\nfor (let index = 0; index < validatorArrayOrigForErr.length; index++) {\n    const validator = validatorArrayOrigForErr[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var result = await tonlinkContractForError.sendAction(validator.getSender(), body);\n        var res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n        (0, chai_1.expect)(res.exitCode).to.equal(0);\n        (0, chai_1.expect)(res.aborted).to.equal(false);\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var result = await tonlinkContractForError.sendAction(validator.getSender(), body);\n        var res = (0, transaction_1.flattenTransaction)(result.transactions[1]);\n        (0, chai_1.expect)(res.exitCode).to.equal(207);\n        (0, chai_1.expect)(res.aborted).to.equal(true);\n    }\n}",
              "err": {},
              "uuid": "bbb7853a-b633-407c-b01e-d29f3a63c2db",
              "parentUUID": "61576555-26d9-4b90-aec4-6f2280a7d3a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a04a885e-748a-4d91-8d0f-8f3b821362df",
            "197e7c49-c52e-4c0e-a7dc-2c71fcc332df",
            "2a4b82e8-e549-47c8-b2fd-0d6cf8e788b2",
            "9901a26e-0eac-4021-b273-e4e144fc2b84",
            "e6299edc-cd6f-4536-87fd-5ab85f1869a5",
            "b5b3902d-a465-4778-b6c9-6d5150bc2ce1",
            "f37b323a-d8b9-4ad7-9fb2-95c1e0f038a2",
            "3835ae0e-14dd-40df-9ae0-520e359d379d",
            "19df846d-97d5-4cfc-9f6a-f2f43a894aaa",
            "33b83c6a-c6eb-4ff5-946f-cd2a14c8197b",
            "27bf519d-01ea-4d03-9684-a5af914f9b7c",
            "a1fa3874-8ba3-4eaa-b08e-3b839dcdb865",
            "f043b191-b610-4af3-bcb7-af2882eedc04",
            "cbf64d0c-eefa-47bf-a9f3-5efe64c2b54f",
            "122a1b68-a896-4e21-acfc-3bab286fa217",
            "445f52ae-95ac-41ef-a92c-319b33aed96e",
            "4bb3b0b0-8844-482f-a76f-3808f1f9c33e",
            "8cbcfee7-907b-469f-9f1c-80d94822f7ec",
            "bbb7853a-b633-407c-b01e-d29f3a63c2db"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1034,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5cff52e7-89f3-4a80-b70f-240a2084757d",
          "title": "ton-link-v3 registration tests",
          "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
          "file": "/tests/transaction.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Registration of 1 validator",
              "fullTitle": "ton-link-v3 registration tests Registration of 1 validator",
              "timedOut": false,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(my.address)\n    .endCell();\nawait tonlinkContract.sendAction(wallet.getSender(), body);\nconst value = await tonlinkContract.get_max_provider();\n(0, chai_1.expect)(value).to.equal(1n);\nvar res = await tonlinkContract.get_info_about_provider(my.address);\nvar resSlice = res.beginParse();\n(0, chai_1.expect)(resSlice.loadAddress().toString()).to.equal(my.address.toString());\n(0, chai_1.expect)(resSlice.loadUint(2)).to.equal(0);",
              "err": {},
              "uuid": "cad3380e-ea99-41fd-9803-0bfb2d37647c",
              "parentUUID": "5cff52e7-89f3-4a80-b70f-240a2084757d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pause + Unpause 1 validator",
              "fullTitle": "ton-link-v3 registration tests Pause + Unpause 1 validator",
              "timedOut": false,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(140, 32)\n    .storeUint(0, 64)\n    .endCell();\nawait tonlinkContract.sendAction(my.getSender(), body);\nvar res = await tonlinkContract.get_info_about_provider(my.address);\nvar resSlice = res.beginParse();\n(0, chai_1.expect)(resSlice.loadAddress().toString()).to.equal(my.address.toString());\n(0, chai_1.expect)(resSlice.loadUint(2)).to.equal(1);\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(130, 32)\n    .storeUint(0, 64)\n    .endCell();\nawait tonlinkContract.sendAction(my.getSender(), body);\nres = await tonlinkContract.get_info_about_provider(my.address);\nresSlice = res.beginParse();\n(0, chai_1.expect)(resSlice.loadAddress().toString()).to.equal(my.address.toString());\n(0, chai_1.expect)(resSlice.loadUint(2)).to.equal(0);",
              "err": {},
              "uuid": "db9883a0-a7d9-472c-a8a0-59b1f92b0b09",
              "parentUUID": "5cff52e7-89f3-4a80-b70f-240a2084757d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete 1 validator",
              "fullTitle": "ton-link-v3 registration tests Delete 1 validator",
              "timedOut": false,
              "duration": 50,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(150, 32)\n    .storeUint(0, 64)\n    .endCell();\nawait tonlinkContract.sendAction(my.getSender(), body);\nconst res = await tonlinkContract.get_info_about_provider(my.address);\nvar resSlice = res.beginParse();\n(0, chai_1.expect)(resSlice.loadAddress().toString()).to.equal(my.address.toString());\n(0, chai_1.expect)(resSlice.loadUint(2)).to.equal(2);\nresSlice.loadUint(64);\n(0, chai_1.expect)(resSlice.loadCoins()).to.equal(0n);",
              "err": {},
              "uuid": "7af50a1b-fb9b-48f5-a651-5d55e36a40a2",
              "parentUUID": "5cff52e7-89f3-4a80-b70f-240a2084757d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cad3380e-ea99-41fd-9803-0bfb2d37647c",
            "db9883a0-a7d9-472c-a8a0-59b1f92b0b09",
            "7af50a1b-fb9b-48f5-a651-5d55e36a40a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 221,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
          "title": "ton-link-v3 registration of all val",
          "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
          "file": "/tests/transaction.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Registration of 1 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 1 validator",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val2.address)\n    .endCell();\nawait tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "dc57a892-dbaa-42be-9fd2-a4553c4985e3",
              "parentUUID": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 2 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 2 validator",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val3.address)\n    .endCell();\nawait tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "c3368a2f-99c6-4ccf-819e-3943afd48523",
              "parentUUID": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 3 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 3 validator",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val4.address)\n    .endCell();\nawait tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "22e1fde4-cdf0-419b-8ca5-b48da6ca7956",
              "parentUUID": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 4 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 4 validator",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val5.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "44174c6b-eeea-4047-a44d-41ea737875b4",
              "parentUUID": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 5 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 5 validator",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val6.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "1a134664-9508-465e-99ca-270caaf93a03",
              "parentUUID": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 6 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 6 validator",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val7.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "9d1c5a07-fc1f-4594-bee3-d700f75745d1",
              "parentUUID": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 7 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 7 validator",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val8.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "65bd5b61-7ff7-454b-acc6-a072025bd3d5",
              "parentUUID": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 8 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 8 validator",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val9.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "616833bf-f7d5-47c7-8cd3-cae9dc4f9a68",
              "parentUUID": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 9 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 9 validator",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val10.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "3579b3a0-42d4-4ccf-927e-8fdeb7164b7c",
              "parentUUID": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 10 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 10 validator",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val11.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "14dfde31-7fc2-46ec-bc78-3c2fa75b2f63",
              "parentUUID": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 11 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 11 validator",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val12.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "bef443e9-7210-455d-bac3-2f2887f12841",
              "parentUUID": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 12 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 12 validator",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val13.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "75d485cf-1b82-460a-9a58-69c4e4980fbc",
              "parentUUID": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration of 13 validator",
              "fullTitle": "ton-link-v3 registration of all val Registration of 13 validator",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(40, 64)\n    .storeCoins(30000000000000)\n    .storeAddress(val14.address)\n    .endCell();\nvar res = await tonlinkContract.sendAction(wallet.getSender(), body);",
              "err": {},
              "uuid": "08b5efdc-5524-4be2-8b61-f880a668b947",
              "parentUUID": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check all registration",
              "fullTitle": "ton-link-v3 registration of all val Check all registration",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const value = await tonlinkContract.get_max_provider();\n(0, chai_1.expect)(value).to.equal(14n);",
              "err": {},
              "uuid": "a7c2c839-b315-4c6c-bd93-bf05ff9dba75",
              "parentUUID": "7df75ee9-f7f5-4be8-84c1-71effaec5a1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc57a892-dbaa-42be-9fd2-a4553c4985e3",
            "c3368a2f-99c6-4ccf-819e-3943afd48523",
            "22e1fde4-cdf0-419b-8ca5-b48da6ca7956",
            "44174c6b-eeea-4047-a44d-41ea737875b4",
            "1a134664-9508-465e-99ca-270caaf93a03",
            "9d1c5a07-fc1f-4594-bee3-d700f75745d1",
            "65bd5b61-7ff7-454b-acc6-a072025bd3d5",
            "616833bf-f7d5-47c7-8cd3-cae9dc4f9a68",
            "3579b3a0-42d4-4ccf-927e-8fdeb7164b7c",
            "14dfde31-7fc2-46ec-bc78-3c2fa75b2f63",
            "bef443e9-7210-455d-bac3-2f2887f12841",
            "75d485cf-1b82-460a-9a58-69c4e4980fbc",
            "08b5efdc-5524-4be2-8b61-f880a668b947",
            "a7c2c839-b315-4c6c-bd93-bf05ff9dba75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 392,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4592ac21-0e1c-4bfa-ae18-f28e1220259a",
          "title": "ton-link-v3 job tests",
          "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
          "file": "/tests/transaction.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c23f870b-2243-4ddc-9009-316c96143fe1",
              "title": "ton-link-v3 100% consensus tests",
              "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
              "file": "/tests/transaction.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Create job",
                  "timedOut": false,
                  "duration": 59,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var link = (0, ton_core_1.beginCell)()\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(my.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(50, 64)\n    .storeCoins(60000000000)\n    .storeAddress(my.address)\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(my.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nconst createJobResult = await tonlinkContract.sendAction(wallet.getSender(), body);\nconst value = await tonlinkContract.get_last_job();\n(0, chai_1.expect)(value).to.equal(1n);",
                  "err": {},
                  "uuid": "bce30725-58c9-41ed-8c0b-6faf58a9617f",
                  "parentUUID": "c23f870b-2243-4ddc-9009-316c96143fe1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get validator array",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Get validator array",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(1);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef();\nvar address_slice = (slice.loadRef()).beginParse();\nvar first_address_slice = (address_slice.loadRef()).beginParse();\nvar second_address_slice = (address_slice.loadRef()).beginParse();\nvar key = 0;\nvar count = 0;\nfor (let index = 0; index < 3; index++) {\n    var temp_address = first_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\nfor (let index = 0; index < 2; index++) {\n    var temp_address = second_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\n(0, chai_1.expect)(validatorArray.length).to.equal(5);",
                  "err": {},
                  "uuid": "887459f0-1d21-41f0-89dd-06f84c62b63a",
                  "parentUUID": "c23f870b-2243-4ddc-9009-316c96143fe1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 1 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Sending a response from the 1 val",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[0];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(1, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "ae32508f-1637-42be-b295-2b447ea13775",
                  "parentUUID": "c23f870b-2243-4ddc-9009-316c96143fe1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 2 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Sending a response from the 2 val",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[1];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(1, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "1b908bbe-56cc-4d2e-bf8b-df7520b7a097",
                  "parentUUID": "c23f870b-2243-4ddc-9009-316c96143fe1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 3 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Sending a response from the 3 val",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[2];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(1, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "4701f1fc-e7e4-429f-a8d7-991e5c43ccc9",
                  "parentUUID": "c23f870b-2243-4ddc-9009-316c96143fe1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 4 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Sending a response from the 4 val",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[3];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(1, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "5a080ef8-1bd4-4de7-89a5-29516dad261c",
                  "parentUUID": "c23f870b-2243-4ddc-9009-316c96143fe1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 5 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Sending a response from the 5 val",
                  "timedOut": false,
                  "duration": 40,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[4];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(1, 64)\n            .storeUint(5, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "d8650ca3-bf31-44ac-9c4f-4834d4338d24",
                  "parentUUID": "c23f870b-2243-4ddc-9009-316c96143fe1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check status job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Check status job",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(1);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\n(0, chai_1.expect)(status).to.equal(1);",
                  "err": {},
                  "uuid": "07f942df-b39f-448e-8879-d8a588c230dd",
                  "parentUUID": "c23f870b-2243-4ddc-9009-316c96143fe1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check result job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 100% consensus tests Check result job",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(1);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef().beginParse();\ncontent.loadRef();\n(0, chai_1.expect)(content.loadUint(64)).to.equal(5);",
                  "err": {},
                  "uuid": "5b7219c9-5234-402f-ad59-c9912ab66380",
                  "parentUUID": "c23f870b-2243-4ddc-9009-316c96143fe1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bce30725-58c9-41ed-8c0b-6faf58a9617f",
                "887459f0-1d21-41f0-89dd-06f84c62b63a",
                "ae32508f-1637-42be-b295-2b447ea13775",
                "1b908bbe-56cc-4d2e-bf8b-df7520b7a097",
                "4701f1fc-e7e4-429f-a8d7-991e5c43ccc9",
                "5a080ef8-1bd4-4de7-89a5-29516dad261c",
                "d8650ca3-bf31-44ac-9c4f-4834d4338d24",
                "07f942df-b39f-448e-8879-d8a588c230dd",
                "5b7219c9-5234-402f-ad59-c9912ab66380"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 285,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c5dcf92a-8abe-4350-9266-c2bb8f755427",
              "title": "ton-link-v3 80% consensus tests",
              "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
              "file": "/tests/transaction.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Create job",
                  "timedOut": false,
                  "duration": 85,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mp = await tonlinkContract.get_max_provider();\nvar link = (0, ton_core_1.beginCell)()\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(my.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(50, 64)\n    .storeCoins(60000000000)\n    .storeAddress(my.address)\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(my.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nconst createJobResult = await tonlinkContract.sendAction(wallet.getSender(), body);\nconst value = await tonlinkContract.get_last_job();\n(0, chai_1.expect)(value).to.equal(2n);",
                  "err": {},
                  "uuid": "6c25a393-66bd-41a6-9890-99f508c5d56e",
                  "parentUUID": "c5dcf92a-8abe-4350-9266-c2bb8f755427",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get validator array",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Get validator array",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(2);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\n(0, chai_1.expect)(jobID).to.equal(2);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef();\nvar address_slice = (slice.loadRef()).beginParse();\nvar first_address_slice = (address_slice.loadRef()).beginParse();\nvar second_address_slice = (address_slice.loadRef()).beginParse();\nvar key = 0;\nvar count = 0;\nfor (let index = 0; index < 3; index++) {\n    var temp_address = first_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\nfor (let index = 0; index < 2; index++) {\n    var temp_address = second_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\n(0, chai_1.expect)(validatorArray.length).to.equal(5);",
                  "err": {},
                  "uuid": "7e7ef4e4-a479-4b64-bbaa-257410976914",
                  "parentUUID": "c5dcf92a-8abe-4350-9266-c2bb8f755427",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 1 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Sending a response from the 1 val",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[0];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(1, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "d145bcd1-745c-43e2-8f9b-3676ce24b6e0",
                  "parentUUID": "c5dcf92a-8abe-4350-9266-c2bb8f755427",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 2 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Sending a response from the 2 val",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[1];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(1, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "851cc1da-fbc7-4174-8562-8dcba9d05745",
                  "parentUUID": "c5dcf92a-8abe-4350-9266-c2bb8f755427",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 3 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Sending a response from the 3 val",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[2];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(1, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "dfcec4c8-1043-4f47-9919-f01a4a174a66",
                  "parentUUID": "c5dcf92a-8abe-4350-9266-c2bb8f755427",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 4 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Sending a response from the 4 val",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[3];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(1, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "30ceb793-b7b9-4277-9ba0-bd83b54d2047",
                  "parentUUID": "c5dcf92a-8abe-4350-9266-c2bb8f755427",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 5 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Sending a response from the 5 val",
                  "timedOut": false,
                  "duration": 40,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[4];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(2, 64)\n            .storeUint(4, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "4efb51a9-fedf-4e46-8d1b-ac6cb7bc77f8",
                  "parentUUID": "c5dcf92a-8abe-4350-9266-c2bb8f755427",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check status job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Check status job",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(2);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\n(0, chai_1.expect)(status).to.equal(1);",
                  "err": {},
                  "uuid": "cc4e8de1-3119-487b-b56c-437c0eee8879",
                  "parentUUID": "c5dcf92a-8abe-4350-9266-c2bb8f755427",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check result job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 80% consensus tests Check result job",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(2);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef().beginParse();\ncontent.loadRef();\n(0, chai_1.expect)(content.loadUint(64)).to.equal(1);",
                  "err": {},
                  "uuid": "9f97082f-cd73-4ff2-9eb2-1734f24c408e",
                  "parentUUID": "c5dcf92a-8abe-4350-9266-c2bb8f755427",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6c25a393-66bd-41a6-9890-99f508c5d56e",
                "7e7ef4e4-a479-4b64-bbaa-257410976914",
                "d145bcd1-745c-43e2-8f9b-3676ce24b6e0",
                "851cc1da-fbc7-4174-8562-8dcba9d05745",
                "dfcec4c8-1043-4f47-9919-f01a4a174a66",
                "30ceb793-b7b9-4277-9ba0-bd83b54d2047",
                "4efb51a9-fedf-4e46-8d1b-ac6cb7bc77f8",
                "cc4e8de1-3119-487b-b56c-437c0eee8879",
                "9f97082f-cd73-4ff2-9eb2-1734f24c408e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 317,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "92cfb5b4-2047-4b10-a1c7-a2599f0c506f",
              "title": "ton-link-v3 20% consensus tests",
              "fullFile": "/Users/knstntn.asuoki/Documents/blockchain/ton-link-contract-v3/typescript/tests/transaction.ts",
              "file": "/tests/transaction.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Create job",
                  "timedOut": false,
                  "duration": 60,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var link = (0, ton_core_1.beginCell)()\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(my.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nvar body = (0, ton_core_1.beginCell)()\n    .storeUint(0x7362d09c, 32)\n    .storeUint(50, 64)\n    .storeCoins(60000000000)\n    .storeAddress(my.address)\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 32).storeAddress(my.address).endCell())\n    .storeRef((0, ton_core_1.beginCell)().storeUint(0, 1).endCell()) // example link\n    .endCell();\nconst createJobResult = await tonlinkContract.sendAction(wallet.getSender(), body);\n//console.log(createJobResult.transactions[1].description)\nconst value = await tonlinkContract.get_last_job();\n(0, chai_1.expect)(value).to.equal(3n);",
                  "err": {},
                  "uuid": "848b9c94-fbcc-42f1-821a-b902b95cc6bb",
                  "parentUUID": "92cfb5b4-2047-4b10-a1c7-a2599f0c506f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get validator array",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Get validator array",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(3);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\n(0, chai_1.expect)(jobID).to.equal(3);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef();\nvar address_slice = (slice.loadRef()).beginParse();\nvar first_address_slice = (address_slice.loadRef()).beginParse();\nvar second_address_slice = (address_slice.loadRef()).beginParse();\nvar key = 0;\nvar count = 0;\nfor (let index = 0; index < 3; index++) {\n    var temp_address = first_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\nfor (let index = 0; index < 2; index++) {\n    var temp_address = second_address_slice.loadAddress();\n    validatorArray.push(temp_address.toString());\n}\n(0, chai_1.expect)(validatorArray.length).to.equal(5);\n//console.log(validatorArray)",
                  "err": {},
                  "uuid": "6e949bd9-ea00-46c2-b837-38da00b09ac4",
                  "parentUUID": "92cfb5b4-2047-4b10-a1c7-a2599f0c506f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 1 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Sending a response from the 1 val",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[0];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(3, 64)\n            .storeUint(1, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "62c3ed5b-1328-47e3-b0e2-1eec53024647",
                  "parentUUID": "92cfb5b4-2047-4b10-a1c7-a2599f0c506f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 2 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Sending a response from the 2 val",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[1];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(3, 64)\n            .storeUint(3, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "cc0d6646-d0e1-483c-9a26-34d2d63befbd",
                  "parentUUID": "92cfb5b4-2047-4b10-a1c7-a2599f0c506f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 3 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Sending a response from the 3 val",
                  "timedOut": false,
                  "duration": 41,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[2];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(3, 64)\n            .storeUint(3, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "c6e22b6b-1769-4011-a294-151ab8d7079b",
                  "parentUUID": "92cfb5b4-2047-4b10-a1c7-a2599f0c506f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 4 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Sending a response from the 4 val",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[3];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(3, 64)\n            .storeUint(3, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "342e7e34-bf8d-4671-aa64-1932e5b4675a",
                  "parentUUID": "92cfb5b4-2047-4b10-a1c7-a2599f0c506f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Sending a response from the 5 val",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Sending a response from the 5 val",
                  "timedOut": false,
                  "duration": 42,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var address = validatorArray[4];\nfor (let index = 0; index < validatorArrayOrig.length; index++) {\n    const validator = validatorArrayOrig[index];\n    if (validator.address.toString() == address) {\n        var body = (0, ton_core_1.beginCell)()\n            .storeUint(160, 32)\n            .storeUint(0, 64)\n            .storeUint(3, 64)\n            .storeUint(4, 64)\n            .endCell();\n        var res = await tonlinkContract.sendAction(validator.getSender(), body);\n    }\n}",
                  "err": {},
                  "uuid": "8c9926da-137b-427b-bfef-b16730418b1e",
                  "parentUUID": "92cfb5b4-2047-4b10-a1c7-a2599f0c506f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check status job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Check status job",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(3);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\n(0, chai_1.expect)(status).to.equal(1);",
                  "err": {},
                  "uuid": "408d16ff-9c9a-4dad-b5f1-ee083cabc41f",
                  "parentUUID": "92cfb5b4-2047-4b10-a1c7-a2599f0c506f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check result job",
                  "fullTitle": "ton-link-v3 job tests ton-link-v3 20% consensus tests Check result job",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await tonlinkContract.get_job_by_jobid(3);\nvar slice = res.beginParse();\nvar jobID = slice.loadUint(64);\nvar start = slice.loadUint(64);\nvar end = slice.loadUint(64);\nvar status = slice.loadUint(1);\nconst content = slice.loadRef().beginParse();\ncontent.loadRef();\n(0, chai_1.expect)(content.loadUint(64)).to.equal(3);",
                  "err": {},
                  "uuid": "fd6747c6-e3c1-4f87-ae7c-c7fe3a248903",
                  "parentUUID": "92cfb5b4-2047-4b10-a1c7-a2599f0c506f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "848b9c94-fbcc-42f1-821a-b902b95cc6bb",
                "6e949bd9-ea00-46c2-b837-38da00b09ac4",
                "62c3ed5b-1328-47e3-b0e2-1eec53024647",
                "cc0d6646-d0e1-483c-9a26-34d2d63befbd",
                "c6e22b6b-1769-4011-a294-151ab8d7079b",
                "342e7e34-bf8d-4671-aa64-1932e5b4675a",
                "8c9926da-137b-427b-bfef-b16730418b1e",
                "408d16ff-9c9a-4dad-b5f1-ee083cabc41f",
                "fd6747c6-e3c1-4f87-ae7c-c7fe3a248903"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 310,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}